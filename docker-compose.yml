version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: user-onboarding-db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourPassword123!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourPassword123! -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: user-onboarding-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend Service (Optional - can run separately)
  # backend:
  #   build: ./backend
  #   container_name: user-onboarding-backend
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - NODE_ENV=development
  #     - DB_HOST=sqlserver
  #     - DB_PORT=1433
  #     - DB_NAME=user_onboarding_db
  #     - DB_USERNAME=sa
  #     - DB_PASSWORD=YourPassword123!
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #     - JWT_SECRET=your-super-secret-jwt-key-change-in-production
  #     - ADMIN_EMAIL=admin@example.com
  #     - ADMIN_PASSWORD=admin123
  #   depends_on:
  #     sqlserver:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   restart: unless-stopped

volumes:
  sqlserver_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: user-onboarding-network